# -*- coding: utf-8 -*-
"""Breast Cancer Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EVIEYvb24qFv7YvQ6WVAttYPfDHhtebX

#Importing Libraries
"""

import numpy as np #Not used in this model
import matplotlib.pyplot as plt #Not used in this model
import pandas as pd

"""#Importing Dataset"""

dataset = pd.read_csv('breast_cancer.csv')
x = dataset.iloc[:,1:-1].values
y = dataset.iloc[:,-1].values

dataset.head()

"""#Splitting dataset into train set and test set"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)

"""#Feature Scaling(optional)"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

"""#Training Logistic Regression model"""

from sklearn.linear_model import LogisticRegression
clf = LogisticRegression(random_state=0)
clf.fit(x_train,y_train)

"""#Predicting results for x_test"""

y_pred = clf.predict(x_test)

"""#Comparing Predicted result with actual observation"""

print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

"""#Evaluation of model using confusion matrix"""

from sklearn.metrics import confusion_matrix
print(confusion_matrix(y_test,y_pred))

"""#Evaluation of model using classification report"""

from sklearn.metrics import classification_report
print(classification_report(y_test,y_pred))

"""#Evaluation of model using K-Fold cross Validation"""

from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(clf,X=x_train,y=y_train,cv=10)
print(accuracies)

print("Accuracy:{:.2f}%".format(accuracies.mean()*100))
print("Standard Deviation:{:.2f}%".format(accuracies.std()*100))